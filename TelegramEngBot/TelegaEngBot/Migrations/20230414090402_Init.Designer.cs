// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelegaEngBot.DataAccessLayer;

#nullable disable

namespace TelegaEngBot.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230414090402_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TelegaEngBot.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TelegramFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegramLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TelegramUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("TelegramUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalArticlesWeight")
                        .HasColumnType("int");

                    b.Property<Guid>("UserSettingsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserSettingsId");

                    b.ToTable("UserList");
                });

            modelBuilder.Entity("TelegaEngBot.Models.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EngWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RusWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommonVocabulary");
                });

            modelBuilder.Entity("TelegaEngBot.Models.UserSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPronunciationOn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSmileOn")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("TelegaEngBot.Models.UserVocabularyItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ArticleId");

                    b.ToTable("UserVocabularyItem");
                });

            modelBuilder.Entity("TelegaEngBot.Models.AppUser", b =>
                {
                    b.HasOne("TelegaEngBot.Models.UserSettings", "UserSettings")
                        .WithMany()
                        .HasForeignKey("UserSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserSettings");
                });

            modelBuilder.Entity("TelegaEngBot.Models.UserVocabularyItem", b =>
                {
                    b.HasOne("TelegaEngBot.Models.AppUser", null)
                        .WithMany("UserVocabulary")
                        .HasForeignKey("AppUserId");

                    b.HasOne("TelegaEngBot.Models.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("TelegaEngBot.Models.AppUser", b =>
                {
                    b.Navigation("UserVocabulary");
                });
#pragma warning restore 612, 618
        }
    }
}
